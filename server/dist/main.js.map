{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/auth/auth-guard.service.ts","./src/app/auth/auth-interceptor.service.ts","./src/app/auth/auth.service.ts","./src/app/auth/login/login.component.ts","./src/app/auth/login/login.component.html","./src/app/auth/register/register.component.ts","./src/app/auth/register/register.component.html","./src/app/auth/user.model.ts","./src/app/gameroom/action-bar/action-bar.component.ts","./src/app/gameroom/action-bar/action-bar.component.html","./src/app/gameroom/bid-display.pipe.ts","./src/app/gameroom/bid/bid.component.ts","./src/app/gameroom/bid/bid.component.html","./src/app/gameroom/chat/chat.component.ts","./src/app/gameroom/chat/chat.component.html","./src/app/gameroom/gameroom-gaurd.service.ts","./src/app/gameroom/gameroom.component.ts","./src/app/gameroom/gameroom.component.html","./src/app/gameroom/info-snack/info-snack.component.ts","./src/app/gameroom/info-snack/info-snack.component.html","./src/app/gameroom/player/player.component.ts","./src/app/gameroom/player/player.component.html","./src/app/gameroom/rook-action.ts","./src/app/gameroom/rook-card/rook-card.component.ts","./src/app/gameroom/rook-card/rook-card.component.html","./src/app/gameroom/score-table.pipe.ts","./src/app/gameroom/snack-data.ts","./src/app/games/create-game/create-game.component.ts","./src/app/games/create-game/create-game.component.html","./src/app/games/game-display.pipe.ts","./src/app/games/games.component.ts","./src/app/games/games.component.html","./src/app/header/header.component.ts","./src/app/header/header.component.html","./src/app/models/player.model.ts","./src/app/router.module.ts","./src/app/services/game-interceptor.service.ts","./src/app/services/games.service.ts","./src/app/services/models/color.model.ts","./src/app/services/models/move-type.model.ts","./src/app/services/models/play.model.ts","./src/app/services/models/round-stage.model.ts","./src/app/web-socket.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from './auth/auth.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit{\n  title = 'front-end';\n\n  constructor(private authService: AuthService){}\n\n  ngOnInit(){\n\n    console.log('auto login')\n    this.authService.autoLogin()\n  }\n}\n","<div class=\"container full-view\">\n    <app-header></app-header>\n    <router-outlet></router-outlet>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms'\nimport {HttpClientModule, HTTP_INTERCEPTORS} from '@angular/common/http'\nimport {AuthInterceptorService} from './auth/auth-interceptor.service'\nimport {GameInterceptor} from './services/game-interceptor.service'\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './header/header.component';\nimport { GamesComponent } from './games/games.component';\nimport {DisplayPipe} from './games/game-display.pipe'\nimport {BidDisplayPipe} from './gameroom/bid-display.pipe'\nimport {TableColorPipe} from './gameroom/score-table.pipe'\nimport {RoutingModule} from './router.module';\nimport { RegisterComponent} from './auth/register/register.component';\nimport { LoginComponent } from './auth/login/login.component';\nimport { CreateGameComponent } from './games/create-game/create-game.component';\nimport { GameroomComponent } from './gameroom/gameroom.component'\nimport {MatDialogModule, MatDialogRef, MAT_DIALOG_DATA, MAT_DIALOG_DEFAULT_OPTIONS} from '@angular/material/dialog';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatInputModule}from '@angular/material/input'\nimport { BidComponent } from './gameroom/bid/bid.component'\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { RookCardComponent } from './gameroom/rook-card/rook-card.component';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport { ActionBarComponent } from './gameroom/action-bar/action-bar.component';\nimport {MatButtonModule} from '@angular/material/button';\nimport { InfoSnackComponent } from './gameroom/info-snack/info-snack.component';\nimport { PlayerComponent } from './gameroom/player/player.component';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport { ChatComponent } from './gameroom/chat/chat.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    GamesComponent,\n    DisplayPipe,\n    BidDisplayPipe,\n    TableColorPipe,\n    RegisterComponent,\n    LoginComponent,\n    CreateGameComponent,\n    GameroomComponent,\n    BidComponent,\n    RookCardComponent,\n    ActionBarComponent,\n    InfoSnackComponent,\n    PlayerComponent,\n    ChatComponent,\n  ],\n  entryComponents:[\n    BidComponent\n  ],\n  imports: [\n    BrowserModule,\n    RoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    MatDialogModule,\n    BrowserAnimationsModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSnackBarModule,\n    MatButtonModule,\n    MatSelectModule,\n    MatCheckboxModule\n  ],\n  providers: [\n    {provide: HTTP_INTERCEPTORS, useClass: AuthInterceptorService, multi: true},\n    {provide : HTTP_INTERCEPTORS, useClass: GameInterceptor, multi: true},\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { AuthService } from './auth.service';\nimport {ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot} from '@angular/router'\nimport { Observable } from 'rxjs';\nimport { tap, map} from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuardService implements CanActivate{\n\n  constructor(private authService: AuthService, private router: Router) {}\n\n  canActivate(route: ActivatedRouteSnapshot, router: RouterStateSnapshot): boolean | Promise<boolean> | Observable<boolean>{\n\n    return this.authService.user.pipe(map(user => {\n      return !!user\n    }), tap(isAuth => {\n      console.log(isAuth)\n\n      if(!isAuth){\n        this.router.navigate(['/login'])\n      }\n    }))\n\n  }\n\n}\n","import {Injectable} from '@angular/core'\nimport { HttpHandler, HttpHeaderResponse, HttpHeaders, HttpInterceptor, HttpParams, HttpRequest} from '@angular/common/http'\nimport { AuthService } from './auth.service'\nimport {take, exhaustMap} from 'rxjs/operators'\n\n\n@Injectable()\n\nexport class AuthInterceptorService implements HttpInterceptor {\n\n    constructor(private authService: AuthService){}\n\n    intercept(req: HttpRequest<any>, next: HttpHandler){\n        return this.authService.user.pipe(take(1), exhaustMap(user => {\n            if(!user){\n                return next.handle(req)\n            }else{\n\n\n                console.log(req)\n\n                const modifiedReq = req.clone({headers: new HttpHeaders({'auth-token': user.token})})\n                return next.handle(modifiedReq)\n            }\n\n        }))\n\n    }\n}","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpErrorResponse} from '@angular/common/http'\nimport {User} from './user.model'\nimport {Subject, BehaviorSubject, throwError} from 'rxjs'\nimport {catchError, tap} from 'rxjs/operators'\nimport { stringify } from '@angular/compiler/src/util';\nimport { Router } from '@angular/router';\nimport jwt_decode from 'jwt-decode'\nimport { GamesService } from '../services/games.service';\n\nexport interface AuthResponseData{\n  token: string,\n  name: string\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\n\n\nexport class AuthService {\n\n  constructor(private http: HttpClient, private router: Router) { }\n\n  user: BehaviorSubject<User> = new BehaviorSubject<User>(null)\n  private tokenExpirationTimer: any\n\n\n  signup(username: string, email: string, password: string){\n\n    return this.http.post('api/user/register', \n    {\n      name: username,\n      email: email,\n      password: password\n    }\n    ).pipe(catchError(this.handleErrors))\n  }\n\n  signin(email: string, password: string){\n\n    return this.http.post<AuthResponseData>('api/user/login',{\n      email: email,\n      password: password\n    }).pipe(catchError(this.handleErrors), tap(resData => {\n      console.log('data')\n\n      this.handleAuthentication(resData.name, resData.token)\n    }))\n  }\n\n\n  autoLogin(){\n    const userData: {name: string, id: string, token: string, expiration: string} = JSON.parse(localStorage.getItem('userData'))\n\n    console.log(userData)\n\n    if(!userData){\n      return\n    }\n\n    const expirationDate = new Date(userData.expiration)\n\n    const loadedUser = new User(userData.name, userData.id, userData.token, expirationDate)\n\n    if(loadedUser.token){\n      const expirationDuration = (+expirationDate*1000) - Date.now()\n      this.autoLogout(expirationDuration)\n      this.user.next(loadedUser)\n    }\n\n\n  }\n\n  logout(){\n    this.user.next(null)\n    this.router.navigate(['/login'])\n    localStorage.removeItem('userData')\n\n    if(this.tokenExpirationTimer){\n      clearTimeout(this.tokenExpirationTimer)\n    }\n\n    this.tokenExpirationTimer = null\n  }\n  autoLogout(expirationDuration: number){\n    this.tokenExpirationTimer = setTimeout(() => {\n      console.log('logged out')\n      this.logout()\n    }, expirationDuration)\n  }\n\n  handleAuthentication(name: string, token: string){\n    console.log(name)\n\n    const data = jwt_decode(token)\n    const id = data['_id']\n    const expirationDate = new Date(+data['exp'])\n\n    const user = new User(name, id, token, expirationDate)\n\n   \n    localStorage.setItem('userData', JSON.stringify(user))\n\n    this.user.next(user)\n    const expirationDuration = (+expirationDate*1000) - Date.now()\n    this.autoLogout(expirationDuration)\n\n    this.router.navigate(['/games'])\n  }\n\n\n\n\n\n  private handleErrors(errorRes: HttpErrorResponse){\n    let errorMessage = errorRes.error\n\n    console.log(errorRes)\n\n    console.log(errorRes)\n\n    let message = 'an unkown error has occured'\n\n    switch(errorMessage){\n      case 'INVALID_PASSWORD':\n        message = 'email or password is incorrect'\n        break;\n      case 'INVALID_EMAIL':\n        message = 'email or password is incorrect'\n        break\n      case 'USERNAME_EXISTS':\n        message = 'this username is taken'\n        break\n      case 'EMAIL_EXISTS':\n        message = \"this email is taken\"\n        break\n      case 'INVALID_REGISTRATION':\n        message =\"invalid registration password and username must be at least 6 characters\"\n\n    }\n    return throwError(message)\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators} from '@angular/forms';\nimport { AuthService } from '../auth.service';\nimport jwt_decode from 'jwt-decode'\nimport { Observable } from 'rxjs';\nimport {AuthResponseData} from '../auth.service'\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  loginForm: FormGroup\n  error: string = null\n\n  constructor(private authService: AuthService) { }\n\n  ngOnInit(): void {\n    this.loginForm = new FormGroup({\n      'email': new FormControl(null, Validators.required),\n      'password': new FormControl(null, Validators.required)\n    })\n  }\n\n  onSubmit(){\n\n    if(this.loginForm.valid){\n\n      const email = this.loginForm.get('email').value\n      const password = this.loginForm.get('password').value\n\n      this.authService.signin(email, password).subscribe(resData => {\n        console.log(resData)\n      }, errorMessage => {\n        this.error = errorMessage\n        console.log(this.error)\n      })\n    }\n\n    this.loginForm.reset()\n  }\n\n}\n","<div class=\"col-sm-12 col-md-6 col-md-offset-3\">\n    <div *ngIf=\"error\" class=\"row\">\n        <div class=\"col-sm-6\">\n            <div class=\"alert alert-danger\">\n                {{error}}\n            </div>\n        </div>\n    </div>\n    <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\n        <div class=\"form-group\">\n            <label for=\"email\">Email</label>\n            <input\n            class=\"form-control\"\n            id=\"email\"\n            type=\"email\"\n            formControlName=\"email\" \n            >\n        </div>\n        <div class=\"form-group\">\n            <label for=\"password\">Password</label>\n            <input\n            class=\"form-control\"\n            id=\"password\"\n            type=\"password\"\n            formControlName=\"password\" \n            >\n        </div>\n        <button class=\"btn btn-primary auth-button\" type=\"submit\" [class.disabled]=\"!loginForm.valid\">Log In</button>\n        <button class=\"btn btn-primary auth-button\" type=\"button\" routerLink=\"/register\">Sign Up</button>\n\n    </form>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators} from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Subject } from 'rxjs';\nimport {AuthService} from '../auth.service'\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  signupForm: FormGroup\n  error: string\n\n  constructor(private authService: AuthService, private router: Router) { }\n\n  ngOnInit(): void {\n\n        this.signupForm = new FormGroup({\n          'username': new FormControl(null, Validators.required),\n          'email': new FormControl(null, [Validators.required, Validators.email]),\n          'passwords': new FormGroup({\n            'password': new FormControl(null, Validators.required),\n            'confPassword': new FormControl(null, [Validators.required])\n          }, this.passwordValidator.bind(this))\n\n\n    })\n  }\n\n\n  passwordValidator(group: FormGroup): {[s:string]: boolean}{\n    const password = group.controls.password.value\n    const confPassword = group.controls.confPassword.value\n    if(password !== confPassword){\n      return {'password does not match confermation password': true}\n    }\n    return null \n  }\n\n\n  onSubmit(){\n    console.log(this.signupForm)\n\n    if(this.signupForm.valid){\n\n      const username = this.signupForm.get('username').value\n      const email = this.signupForm.get('email').value\n      const password = this.signupForm.get('passwords').get('password').value\n      this.authService.signup(username, email, password).subscribe(resData => {\n        console.log(resData)\n        this.router.navigate(['/login'])\n      }, errorRes => {\n        this.error = errorRes\n      })\n    }\n\n    this.signupForm.reset()\n\n\n\n    this.router\n\n  }\n\n\n}\n","<div class=\"row\">\n    <div class=\"col-sm-6 col-md-6 col-md-offset-3\">\n\n        <div *ngIf=\"error\" class=\"row\">\n            <div class=\"col-sm-6\">\n                <div class=\"alert alert-danger\">\n                    {{error}}\n                </div>\n            </div>\n        </div>\n        <form [formGroup]=\"signupForm\" (ngSubmit)=\"onSubmit()\">\n            <div class=\"form-group\">\n                <label for=\"name\">Username</label>\n                <input \n                type=\"text\"\n                id=\"name\"\n                class=\"form-control\"\n                formControlName=\"username\"\n                >\n            </div>\n            <div class=\"form-group\">\n                <label for=\"email\">E-mail</label>\n                <input \n                type=\"email\"\n                class=\"form-control\"\n                id=\"email\"\n                formControlName=\"email\"\n                >\n            </div>\n            <div formGroupName=\"passwords\" class=\"from-group\">\n                <div class=\"form-group\">\n                    <label for=\"password\">Password</label>\n                    <input\n                    type=\"password\"\n                    id=\"password\"\n                    class=\"form-control\"\n                    formControlName=\"password\"\n                    >\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"confPassword\">Confermation Password</label>\n                    <input\n                    type=\"password\"\n                    id=\"confPassword\"\n                    class=\"form-control\"\n                    formControlName=\"confPassword\"\n                    >\n                </div>\n            </div>\n                <button class=\"btn btn-primary auth-button\" type=\"submit\" [class.disabled]=\"!signupForm.valid\">Sign Up</button>\n                <button class=\"btn btn-primary auth-button\" type=\"button\" routerLink=\"/login\">Sign In</button>\n        </form>\n    </div>\n</div>","export class User{\n    constructor(\n        public name: string,\n        public id: string,\n        public token: string,\n        public expiration: Date\n    ){}\n}","import {Component, Inject, Output} from '@angular/core';\nimport {MAT_SNACK_BAR_DATA} from '@angular/material/snack-bar';\nimport { SnackData } from '../snack-data';\nimport { EventEmitter } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport {RookAction} from '../rook-action'\nimport { Color } from 'src/app/services/models/color.model';\n\n@Component({\n  selector: 'app-action-bar',\n  templateUrl: \"./action-bar.component.html\",\n  styleUrls: [\"./action-bar.component.css\"]\n})\n\nexport class ActionBarComponent {\n  public action = new Subject<RookAction>()\n  //@Output() action = new EventEmitter<any>();\n  constructor(@Inject(MAT_SNACK_BAR_DATA) public data: SnackData) { }\n\n  values = [1,14,13,12,11,10,9,8,7,6,5,4,3,2]\n  colors = ['red', 'blue', 'green', 'black']\n  message = this.data.message;\n  bid = (this.data.action === 'bid')\n  discard = (this.data.action === \"discard\")\n  redeal = (this.data.action === \"redeal\")\n  choosePartner = (this.data.action === \"choose_partner\")\n  roundInfo = (this.data.action === \"round_info\")\n  startingBid = this.data.payload\n\n  decrementBid(){\n    if(this.data.payload > this.startingBid){\n      this.data.payload -= 5\n    }\n  }\n  incrementBid(){\n    this.data.payload +=5\n  }\n\n  emitAction(action: string, payload: any){\n    //'bid' | 'discard'\n\n    if(action == 'bid'){\n      this.action.next(new RookAction('bid', payload))\n    }else if(action == 'discard'){\n      this.action.next(new RookAction('discard', payload))\n    }else if(action === 'redeal'){\n      this.action.next(new RookAction('redeal', payload))\n    }else if(action === 'choose_partner'){\n      if(this.values.includes(+payload.value) && this.colors.includes(payload.color)){\n\n        switch(payload.color){\n          case 'black':\n            payload.color = Color.BLACK\n            break\n          case 'red':\n            payload.color = Color.RED\n            break;\n          case 'blue':\n            payload.color = Color.YELLOW\n            break;\n          case 'green':\n            payload.color = Color.GREEN\n            break;\n      }\n\n      payload.value = +payload.value\n\n      this.action.next(new RookAction('choose_partner', payload))\n    }\n\n\n    }else if(action === 'round_info'){\n      this.action.next(new RookAction('round_info', payload))\n    }\n  }\n}","<div class=\"snack-container\">\n    <div class=\"snack-message\">\n        <div *ngIf='bid' class=\"bid-flex\">\n            <span class=\"current_bid\"> \n            {{data.payload}}\n            </span>\n            <span class=\"subtract\" (click)=\"decrementBid()\"></span><span class=\"add\" (click)=\"incrementBid()\"></span>\n        </div>\n        {{message}}\n\n    </div>\n    <div class=\"snack-actions\">\n        <div *ngIf =\"choosePartner\">\n            <h4>mat-select</h4>\n            <mat-form-field appearance=\"fill\">\n            <mat-label>Choose a color</mat-label>\n            <mat-select #input1>\n                <mat-option value=\"blue\">Blue</mat-option>\n                <mat-option value=\"green\">Green</mat-option>\n                <mat-option value=\"black\">Black</mat-option>\n                <mat-option value=\"red\">Red</mat-option>\n            </mat-select>\n            </mat-form-field>\n            <mat-form-field appearance=\"fill\">\n            <mat-label>Choose number</mat-label>\n            <mat-select #input2>\n                <mat-option value=\"1\">1</mat-option>\n                <mat-option value=\"2\">2</mat-option>\n                <mat-option value=\"3\">3</mat-option>\n                <mat-option value=\"4\">4</mat-option>\n                <mat-option value=\"5\">5</mat-option>\n                <mat-option value=\"6\">6</mat-option>\n                <mat-option value=\"7\">7</mat-option>\n                <mat-option value=\"8\">8</mat-option>\n                <mat-option value=\"9\">9</mat-option>\n                <mat-option value=\"10\">10</mat-option>\n                <mat-option value=\"11\">11</mat-option>\n                <mat-option value=\"12\">12</mat-option>\n                <mat-option value=\"13\">13</mat-option>\n                <mat-option value=\"14\">14</mat-option>\n            </mat-select>\n            </mat-form-field>\n            <button type=\"button\" mat-raised-button color='primary' (click)=\"emitAction('choose_partner', {color: input1.value, value: input2.value} )\">Submit</button>\n        </div>\n        <button *ngIf=\"roundInfo\" (click)=\"emitAction('round_info', true)\" mat-raised-button color='primary'>Ok</button>\n        <button *ngIf='redeal' (click)=\"emitAction('redeal', true)\" mat-raised-button color=\"primary\">Yes</button>\n        <button *ngIf='redeal' (click)=\"emitAction('redeal', false)\" mat-raised-button color=\"primary\">No</button>\n        <button *ngIf='discard' (click)=\"emitAction('discard', null)\" mat-raised-button color=\"primary\">Discard</button>\n        <button class=\"mr\" (click)=\"emitAction('bid', data.payload)\" *ngIf='bid' mat-raised-button color=\"primary\">Bid</button>\n        <button *ngIf='bid' (click)=\"emitAction('bid', 0)\" mat-raised-button color=\"accent\">Pass</button>\n    </div>\n</div>","\nimport {Pipe, PipeTransform} from '@angular/core'\nimport {Color} from '../services/models/color.model'\n\n\n@Pipe({\n    name: 'bidDisplay',\n    pure: false\n})\n\n\nexport class BidDisplayPipe implements PipeTransform{\n    \n\n    transform(bidWinner: any, index: number, players: any[]){\n        return players[(bidWinner-index+players.length)%players.length]\n\n    }\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { GamesService } from 'src/app/services/games.service';\n\n@Component({\n  selector: 'app-bid',\n  templateUrl: './bid.component.html',\n  styleUrls: ['./bid.component.css']\n})\nexport class BidComponent implements OnInit {\n\n  bidForm: FormGroup\n\n  constructor(private game: GamesService,private dialogRef: MatDialogRef<BidComponent>,@Inject(MAT_DIALOG_DATA) public data) { \n    console.log(data)\n  }\n\n  ngOnInit(): void {\n\n    this.bidForm = new FormGroup({\n      'bid': new FormControl(+this.data.bid+5, Validators.required)\n    })\n  }\n\n  submitHandler(){\n    console.log('submit')\n\n    console.log(this.bidForm.value['bid'])\n\n    if(this.bidForm.value['bid'] > this.data.bid && this.bidForm.value['bid'] % 5 == 0){\n      this.dialogRef.close()\n    }\n\n\n  }\n\n  pass(){\n    this.game.bidding = false\n    this,this.dialogRef.close()\n  }\n\n\n}\n","<form [formGroup]=\"bidForm\" (ngSubmit)=\"submitHandler()\">\n    <div class=\"row\">\n        <div class=\"col-sm\">\n            <mat-form-field>\n                <input matInput placeholder=\"Bid\" formControlName=\"bid\">\n            </mat-form-field>\n        </div>\n    </div>\n    <div class=\"row\">\n        <div class=\"col-sm\">\n            <button mat-button class=\"btn btn-primary\" color=\"primary\" type=\"submit\" [disabled]=\"bidForm.invalid\">Enter bid</button>\n        </div>\n    </div>\n    <div class=\"row\">\n        <div class=\"col-sm\">\n            <button mat-button class=\"btn btn-primary\" color=\"primary\" type=\"button\" (click)=\"pass()\">Pass</button>\n        </div>\n    </div>\n</form>\n","import { Component, ElementRef, HostListener, OnInit, ViewChild } from '@angular/core';\nimport { AuthService } from 'src/app/auth/auth.service';\nimport { User } from 'src/app/auth/user.model';\nimport { GamesService } from 'src/app/services/games.service';\nimport { WebSocketService } from 'src/app/web-socket.service';\n\n@Component({\n  selector: 'app-chat',\n  templateUrl: './chat.component.html',\n  styleUrls: ['./chat.component.css']\n})\nexport class ChatComponent implements OnInit {\n\n  chatOpen = false\n  messages = []\n  numberOfUnreadMessages = 0\n  @ViewChild('message') message: ElementRef \n  @ViewChild('scrollbox') scrollbox: ElementRef \n  @ViewChild('chat') chat: ElementRef \n  @ViewChild('circle') circle: ElementRef \n  @HostListener('document:click', ['$event'])\n  clickout(event) {\n    console.log(event.target)\n    if(this.chat.nativeElement.contains(event.target)) {\n\n    } else if(this.chatOpen && !this.circle.nativeElement.contains(event.target)){\n      this.chatOpen = false;\n    }\n  }\n\n\n  constructor(private socketService: WebSocketService, private authService: AuthService, private gameService: GamesService,private eRef: ElementRef) {\n      socketService.listen('new_message').subscribe((message: any) => {\n\n        this.authService.user.subscribe(user => {\n          console.log(user.id)\n          console.log(message.user_id)\n          if(!(user.id === message.user_id)){\n            message = {...message, me: false}\n            this.messages.push(message)\n            if(!this.chatOpen){\n              this.numberOfUnreadMessages++\n            }\n          }\n          this.scrollbox.nativeElement.scrollTop = this.scrollbox.nativeElement.scrollHeight\n        })\n\n        \n      })\n   }\n\n\n  toggleChat(){\n\n    this.chatOpen = !this.chatOpen\n    if(this.chatOpen){\n      setTimeout(()=>{ // this will make the execution after the above boolean has changed\n        this.message.nativeElement.focus();\n      },0);  \n    }\n\n    this.numberOfUnreadMessages = 0\n\n  }\n\n  keyDown(event){\n    if(event.keyCode === 13){\n      this.sendMessage(this.message.nativeElement.value)\n    }\n  }\n\n  sendMessage(message: any){\n\n    console.log('message')\n\n    this.message.nativeElement.value = \"\"\n\n\n    this.authService.user.subscribe(user => {\n      \n      this.messages.push({user: user.name, user_id: user.id, message: message, me: true})\n\n      this.gameService.game.subscribe((game: any) => {\n\n        this.socketService.emit('message', {name: user.name, user_id: user.id, message: message, game_id: game.id})\n      })\n\n    })\n\n\n  }\n\n\n  ngOnInit(): void {\n  }\n\n}\n","<div *ngIf=\"numberOfUnreadMessages > 0\" [ngStyle]=\"{'color': 'white'}\" class=\"square-icon\">{{numberOfUnreadMessages}}</div>\n<div #circle class=\"circle-button\" (click)=\"toggleChat()\">\n    <div class=\"circle-icon\">\n\n    </div>\n\n\n\n</div>\n\n\n<div #chat [class.show-chat]=\"this.chatOpen\" class=\"info-box\">\n    <div #scrollbox class=\"messages\">\n        <div *ngFor=\"let message of messages\" [class.me]=\"message.me\" [class.other]=\"!message.me\">\n            <div>\n                <div *ngIf=\"!message.me\" class=\"message-title\">{{message.user}}</div>\n                <div class=\"message\">{{message.message}}</div>\n            </div>\n        </div>\n    </div>\n    <div class=\"input-container\">\n        <input autocomplete=\"off\" class=\"message-input\" type=\"text\" (keydown)=\"keyDown($event)\" autofocus matInput #message>\n        <button class='btn btn-primary message-submit-button' type=\"submit\" (click)=\"sendMessage(message.value)\">Send</button>\n    </div>\n</div>","import { Injectable } from '@angular/core';\nimport {ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot} from '@angular/router'\nimport { Observable } from 'rxjs';\nimport {GamesService} from '../services/games.service'\nimport { tap, map} from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GameroomGaurdService implements CanActivate{\n\n  constructor( private router: Router, private gameService: GamesService) {}\n\n  canActivate(route: ActivatedRouteSnapshot, router: RouterStateSnapshot): boolean | Promise<boolean> | Observable<boolean>{\n\n    return this.gameService.game.pipe(map(user => {\n      return !!user\n    }), tap(partOfGame => {\n      console.log(partOfGame)\n\n      if(!partOfGame){\n        this.router.navigate(['/games'])\n      }\n    }))\n\n  }\n\n}\n","import { supportsPassiveEventListeners } from '@angular/cdk/platform';\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Subscribable, Subscription } from 'rxjs';\nimport { AuthService } from '../auth/auth.service';\nimport { Router} from '@angular/router';\nimport { Game } from '../models/game.model';\nimport { GamesService } from '../services/games.service';\nimport { WebSocketService } from '../web-socket.service';\nimport { BidComponent } from './bid/bid.component';\nimport {MatSnackBar, MatSnackBarRef, MAT_SNACK_BAR_DATA} from '@angular/material/snack-bar';\nimport { ActionBarComponent } from './action-bar/action-bar.component';\nimport { SnackData} from './snack-data';\nimport { RookAction } from './rook-action';\nimport {Card} from '../services/models/card.model';\nimport {RoundState} from '../services/models/round-stage.model';\nimport {Color} from '../services/models/color.model';\nimport { Play } from '../services/models/play.model';\nimport { MoveType } from '../services/models/move-type.model';\nimport { delay } from 'rxjs/operators';\n\n\n@Component({\n  selector: 'app-gameroom',\n  templateUrl: './gameroom.component.html',\n  styleUrls: ['./gameroom.component.css']\n})\nexport class GameroomComponent implements OnInit {\n  snack: MatSnackBarRef<any> = null;\n  snackMove: MatSnackBarRef<any> = null;\n  turn: MatSnackBarRef<any> = null\n  misdealSnackBar: any = null\n  misdeal: MatSnackBarRef<any> = null\n  trumpSnackBar: MatSnackBarRef<any> = null\n  cards: Card[] \n  yourTurn: boolean = false\n  gameStage: RoundState\n  bidForm: FormGroup\n  game_id: string\n  bidSubscription: Subscription\n  kitty: Card[] \n  playedCards: Card[]  = []\n  playerNames = []\n  hands: Card[][] = []\n  points = []\n  playing = false\n  trump: Color | null = null\n  index: number\n  currentTrickColor: Color\n  numberOfPlayers: number\n  rounds = []\n  playerInfo = {\n    \"playerNames\" : [],\n    \"playedCards\" : [],\n    \"currentPlayer\" : null,\n    \"playing\" : null,\n    \"hands\" : [],\n    \"bidWinner\" : null,\n    \"bids\": [],\n    \"roundState\": null,\n    \"bidders\": []\n  }\n  isLeading = false\n  currentPlayerIndex: number;\n  topPlayers: any = []\n  throwOutPoints = false\n\n\n  constructor(private snackBar: MatSnackBar, private router: Router, private gameService: GamesService, private authService: AuthService, private dialog: MatDialog, private socketService: WebSocketService) { }\n\n\n  ngOnInit(): void {\n\n    this.gameService.fetchGames()     //Incase of refresh fetches games then checks if your in any of them then sends you to gameroom\n\n    this.gameService.gameState.subscribe(game => {\n\n      if(game && game !== null){\n\n          this.gameService.yourIndex.subscribe(index => {\n\n            this.hands = []\n            this.playerNames = []\n            this.playedCards = []\n            this.points = []\n\n            for(let i = 0; i < game.numberOfPlayers; i++){\n              this.hands.push(null)\n              this.playerNames.push(null)\n              this.playedCards.push(null)\n              this.points.push(0)\n            }\n\n            if(this.playerNames.length > 3){\n              this.topPlayers = this.playerNames.slice(2, this.playerNames.length - 1)\n            }\n\n            this.index = index\n\n            this.throwOutPoints = game.throwOutPoints\n\n            console.log('throw out points')\n            console.log(this.throwOutPoints)\n\n            console.log(index)\n\n\n            this.rounds = game.rounds\n\n\n            \n            this.game_id = game.game_id \n          \n            var round = game['rounds'][game['currentRoundIndex']]\n\n        \n\n            var misdeals = round.misdeals\n\n\n            var misdeal = false\n\n            if(misdeals.includes(index) && round.hasBid[index] === false){\n              this.snackInput(new SnackData('Would you like a redeal?', 'redeal', null))\n              misdeal = true\n            }else if(misdeals.includes(index)){\n              this.misdealSnackBar = this.snackBar.open(\"You have already bid! You cannot call a misdeal anymore!\", null, {\n                duration: 2000,\n              });\n            }\n\n            this.gameStage = round.roundState\n\n            this.yourTurn = game['currentPlayer'] === index ? true : false\n\n\n            this.numberOfPlayers = game['numberOfPlayers']\n\n            this.currentPlayerIndex = (game['currentPlayer']-index+this.numberOfPlayers)%this.numberOfPlayers\n          \n\n            var players = game.players\n\n\n\n\n\n            var numberOfPlayers = players.length\n\n\n\n            var playCards = round.tricks[round.tricks.length-1]\n            \n            var d = true\n\n            if(playCards){\n              this.currentTrickColor = playCards.color\n              playCards = playCards.cards\n\n\n              for(let card of playCards){\n                if(card !== null){\n                  d = false\n                }\n              }\n            }\n\n            var delay = d && round.tricks.length > 1\n\n            console.log(round.tricks)\n\n            if(delay){\n              playCards = round.tricks[round.tricks.length - 2].cards\n            }\n\n            this.isLeading = d\n\n\n\n\n\n\n\n          var timeout = 0\n\n          if(game.rounds.length > 1 && d && round.tricks.length === 0 && round.bidders.length === this.numberOfPlayers && round.bid === 75){\n\n            this.cards = []\n            this.hands = [[], [], [], []]\n            this.kitty = []\n            this.playing = true\n            var indexOfTrick = game.rounds[game.rounds.length - 2].tricks.length\n\n            var playCards = game.rounds[game.rounds.length - 2].tricks[indexOfTrick-2].cards\n\n            for(var i = 0; i < players.length; i++){\n              if(players[(i+index)%numberOfPlayers]){\n                if(playCards && playCards[(i+index)%numberOfPlayers] !== null){\n                  this.playedCards[i] = playCards[(i+index)%numberOfPlayers]  \n                }else{\n                  this.playedCards[i] = null\n                }\n              }\n            }\n            timeout = 5000\n            this.trump = null\n\n\n          }else if(!(this.gameStage === RoundState.PLAYING)){\n            this.playing = false\n\n          }\n\n            setTimeout(() => {\n              this.kitty = round.kitty\n              this.playing = false\n              for(var i = 0; i < players.length; i++){\n                if(players[(i+index)%numberOfPlayers]){\n                  if(playCards && playCards[(i+index)%numberOfPlayers] !== null){\n                    this.playedCards[i] = playCards[(i+index)%numberOfPlayers]  \n                  }else{\n                    this.playedCards[i] = null\n                  }\n                  this.playerNames[i] = players[(i+index)%numberOfPlayers].player_name\n                  this.points[i] = players[(i+index)%numberOfPlayers].points\n                }\n                this.hands[i] = (round.hands[(i+index)%numberOfPlayers])\n\n              }\n                this.cards = this.hands[0]\n                this.sort(this.cards)\n\n              console.log(this.points)\n\n              console.log('played cardsd')\n              console.log(this.playedCards)\n\n\n\n            if(this.gameStage === RoundState.BIDDING && this.yourTurn){\n\n              if(!misdeal){\n                this.snackInput(new SnackData(\"\", 'bid', round.bid +5))\n              }\n            }else if(this.gameStage === RoundState.DISCARDING && this.yourTurn){\n\n            }else if(this.gameStage === RoundState.CHOOSING_TRUMP && this.yourTurn){\n\n              var trumpSnackBar = this.snackBar.open(\"Select a card to indicate trump\", null, {\n                duration: 0,\n              });\n            }else if(this.gameStage === RoundState.CHOOSING_PARTNER && this.yourTurn){\n\n              this.snackInput(new SnackData(\"Enter Card\", 'choose_partner', null))\n\n            }else if(this.gameStage === RoundState.PLAYING){\n              this.playing = true\n\n\n              var timeout = 0\n\n              if(this.trump === null){\n                var color: Color = round['trump']\n\n                this.trump = color\n\n                var trumpColorString = ''\n                switch(color){\n                  case Color.BLACK:\n                    trumpColorString = 'black'\n                    break\n                  case Color.RED:\n                    trumpColorString = 'red'\n                    break;\n                  case Color.YELLOW:\n                    trumpColorString = 'blue'\n                    break;\n                  case Color.GREEN:\n                    trumpColorString = 'green'\n                    break;\n                }\n\n                var partnerColorString = ''\n\n                var description = ''\n                if(this.numberOfPlayers !== 4 && this.numberOfPlayers !== 3){\n\n                  var choosenCard = this.rounds[this.rounds.length-1].choosenCard\n                  switch(choosenCard.color){\n                    case Color.BLACK:\n                      partnerColorString = 'black'\n                      break\n                    case Color.RED:\n                      partnerColorString = 'red'\n                      break;\n                    case Color.YELLOW:\n                      partnerColorString = 'blue'\n                      break;\n                    case Color.GREEN:\n                      partnerColorString = 'green'\n                      break;\n                  }\n\n                  description = \"Trump is \" + trumpColorString + \". The \" + choosenCard.value + \" of \" + partnerColorString + \" is the partner.\"\n                  \n\n                }else{\n                  description = \"Trump is \" + trumpColorString\n                }\n\n         \n                console.log(round.tricks)\n                console.log('tricks')\n\n\n\n\n                this.snackInput(new SnackData(description, 'round_info', null))\n\n\n\n\n\n\n                timeout = 10000 \n\n              }else{\n\n                if(this.yourTurn && this.isLeading){\n                    setTimeout(() => {\n                        this.turn = this.snackBar.open(\"You Lead\", null, {\n                          duration: 0,\n                        });\n                    }, timeout)\n                  }\n\n                }\n\n\n\n\n            }\n\n            console.log('bids')\n            console.log(round.bids)\n\n                                //for rendering the player hands\n             this.playerInfo = {\n                \"playerNames\" : this.playerNames,\n                \"playedCards\" : this.playedCards,\n                \"currentPlayer\" : this.currentPlayerIndex,\n                \"playing\" : this.playing,\n                \"hands\" : this.hands,\n                \"bidWinner\" : (this.rounds[this.rounds.length -1].bidWinner-this.index+this.numberOfPlayers)%this.numberOfPlayers,\n                \"bids\" : round.bids,\n                \"roundState\": round.roundState,\n                \"bidders\" : round.bidders\n              }\n\n\n            },timeout)\n\n\n\n\n        })\n        }else if(game === null){\n\n          setTimeout(()=> {\n            this.playedCards = [null, null, null, null]\n            this.currentPlayerIndex = null\n          }, 2000)\n\n\n\n          \n\n        }\n\n        /*\n        if(game && game['gameFinished']){\n          this.authService.user.subscribe(user => {\n            this.socketService.emit(\"game_done\",{game_id: this.game_id, player_id: user.id})\n          })\n\n        }\n        */\n\n    })\n\n    this.gameService.kitty.subscribe(kitty => {\n      this.kitty = kitty\n    })\n\n\n    this.bidSubscription = this.gameService.bidRequest.subscribe((bid) => {\n\n      console.log(bid)\n\n      const dialogRef = this.dialog.open(BidComponent, {\n        width: '400px',\n        height: '400px',\n        data: {\n          bid: bid\n        }\n      });\n\n      dialogRef.afterClosed().subscribe(result => {\n\n        if(this.gameService.bidding){\n          this.gameService.bidDialogClosedStillBidding.next(bid)\n        }\n\n      });\n\n      this.gameService.bidding = true\n\n    })\n  }\n\n\n\n\n  ngOnDestroy(){\n    this.bidSubscription.unsubscribe()\n  }\n  //sort cards in hand\n  sort(cards: Card[]){\n    cards.sort((a,b) => {\n      if(a.value === 1){\n          return -1\n      }else if(b.value === 1){\n          return 1 \n      }else{\n          return b.value-a.value\n      }})\n    cards.sort((a,b) => {return a.color-b.color});\n    cards.sort((a,b) => {\n      if(a.color == Color.UNDETERMINED){\n        return 1\n      }else{\n        return 0\n      }\n    })\n\n  }\n\n\n\n\n  cardClicked(card: Card){\n\n    console.log('round state')\n    console.log(this.gameStage)\n\n    if(this.yourTurn && this.gameStage === RoundState.DISCARDING){\n\n      if(card.kitty){\n        card.kitty = false\n      this.kitty.splice(this.kitty.indexOf(card),1)\n      this.cards.push(card)\n      this.sort(this.cards)\n      }else{\n        if(card.points == 0 || card.points == null || this.throwOutPoints){\n          card.kitty = true\n          this.cards.splice(this.cards.indexOf(card),1)\n          this.kitty.push(card)\n        }else{\n          this.snackBar.open(\"🤦‍♀️ You cannot discard pointer cards\", null, {\n            duration: 2000,\n          });\n        }\n\n      }\n      this.checkForDiscard()\n      \n    }else if(this.gameStage === RoundState.CHOOSING_TRUMP && this.yourTurn){\n\n\n        this.authService.user.subscribe(user => {\n          this.socketService.emit('play', {player_id: user.id, game_id : this.game_id, play: new Play(MoveType.SET_TRUMP, user.id, card.color)})\n        })\n\n        this.trumpSnackBar = null\n\n    }else if(this.gameStage === RoundState.PLAYING && this.yourTurn){\n\n      var hasTrickColor = false\n\n      if(this.turn !== null){\n        this.turn.dismiss()\n      }\n\n\n      for(let c of this.cards){\n        if(c.color === this.currentTrickColor){\n          hasTrickColor = true\n        }\n      }\n\n      if(hasTrickColor && card.color !== this.currentTrickColor){\n          this.snackBar.open(\"You must follow suit if you can\", null, {\n            duration: 2000,\n          });\n        \n      }else{\n          \n          this.authService.user.subscribe(user => {\n            this.socketService.emit('play', {player_id: user.id, game_id : this.game_id, play: new Play(MoveType.PLAY, user.id, {card: card, index: this.index})})\n          })\n\n\n\n      }\n\n\n\n    }\n\n\n  }\n\n  checkForDiscard(){\n    var kittyLength = this.kitty.length\n    if(kittyLength != 5 && this.numberOfPlayers === 4 || kittyLength != 6 && this.numberOfPlayers === 3 || kittyLength != 3 && this.numberOfPlayers === 6 || kittyLength !== 2 && this.numberOfPlayers === 5 ){\n      console.log(this.snack)\n      if(this.snackMove != null){\n       this.snackMove.dismiss()\n      }\n      return\n    }\n    for (let card of this.kitty){\n      console.log(card)\n      if(card.points != 0 && card.points != null && !this.throwOutPoints){\n        if(this.snack != null){\n          this.snackMove.dismiss()\n         }\n        return\n      }\n    }\n    //display custom snackBar for discard\n\n    this.snackInput(new SnackData(\"Would you like to discard?\", 'discard', null))\n\n\n\n\n  }\n\n\n  //call when you needing a little dialog for input (bidding, discarding) Just use normal snackBar for game advice\n  snackInput(snackData: SnackData){\n    this.snackMove = this.snackBar.openFromComponent(ActionBarComponent, {\n      duration:0,\n      data: snackData\n    })\n    //subscribe to get the payload back from snackBar custom component\n    this.snackMove.instance.action.subscribe((data: RookAction) => {\n      // handle submission here Depends on action taken\n      if(data.action === 'bid'){\n        this.authService.user.subscribe(user => {\n          this.socketService.emit('play', {player_id: user.id, game_id : this.game_id, play: new Play(MoveType.BID, user.id, data.payload)})\n        })\n      }else if(data.action === 'discard'){\n        console.log('discarding')\n        this.authService.user.subscribe(user => {\n          for(let card of this.kitty){\n            card.state = 'flipped'\n          }\n          this.socketService.emit('play', {player_id: user.id, game_id : this.game_id, play: new Play(MoveType.DISCARD, user.id, {hand: this.cards, kitty: this.kitty})})\n        })\n      }else if(data.action === 'redeal'){\n        if(data.payload){\n          this.authService.user.subscribe(user => {\n            this.socketService.emit('play', {player_id: user.id, game_id : this.game_id, play: new Play(MoveType.CORRECTING_MISDEAL, user.id, {index: this.index, redeal: data.payload})})\n          })\n        }\n\n          if(this.gameStage === RoundState.BIDDING && this.yourTurn){\n\n            console.log('this is your turn')\n            console.log(this.rounds[this.rounds.length-1].bid)\n            this.snackMove.instance.action.unsubscribe()\n            this.snackMove.dismiss()\n\n            this.snackInput(new SnackData(\"\", 'bid', this.rounds[this.rounds.length - 1].bid +5))\n            return\n          }\n      }else if(data.action === 'choose_partner'){\n        if(data.payload){\n            this.authService.user.subscribe(user => {\n              console.log(data.payload)\n              this.socketService.emit('play', {player_id: user.id, game_id : this.game_id, play: new Play(MoveType.CHOOSE_PARTNER, user.id, {index: this.index, card: data.payload})})\n            })\n        }\n      }else if(data.action === 'round_info' && this.isLeading && this.rounds[this.rounds.length-1].tricks.length === 1){\n        if(this.yourTurn && RoundState.PLAYING){\n                this.turn = this.snackBar.open(\"You Lead\", null, {\n                  duration: 0,\n                });\n              }\n            }\n\n\n\n\n      this.snackMove.instance.action.unsubscribe()\n      this.snackMove.dismiss()\n    })\n\n  }\n \n\n\n\n\n\n}\n","<div class=\"table\">\n\n    <div *ngIf=\"playerNames.length > 3\" class=\"top-players\">\n        <app-player *ngFor=\"let player of topPlayers; let i = index\" [playerInfo]=\"playerInfo\" [playerIndex]=\"i+2\" [globalIndex]=\"(index+i+2)%this.numberOfPlayers\"></app-player>\n    </div>\n\n    <div class=\"flex-row side-players\">\n        <app-player [playerInfo]=\"playerInfo\" [playerIndex]=\"1\" [globalIndex]=\"(this.index+1)%this.numberOfPlayers\"></app-player>\n        <div *ngIf=\"playing\" class=\"playing-table\">\n\n        </div>\n        <div *ngIf=\"!playing\" class=\"kitty\">\n            <app-rook-card *ngFor=\"let card of kitty\" [card]=\"card\" (click)=\"cardClicked(card)\">\n            </app-rook-card>\n        </div>\n        <app-player [playerInfo]=\"playerInfo\" [playerIndex]=\"this.numberOfPlayers-1\" [globalIndex]=\"(this.index + this.numberOfPlayers-1)%this.numberOfPlayers\"></app-player>\n    </div>\n</div>\n\n<div class=\"cards\">\n    <div *ngIf=\"playing && playedCards[0] !== null\" class=\"played-card-bottom\">\n        <app-rook-card [card]=\"playedCards[0]\" (click)=\"cardClicked(card)\">\n        </app-rook-card>\n    </div>\n    <app-rook-card *ngFor=\"let card of cards\" [card]=\"card\" (click)=\"cardClicked(card)\">\n    </app-rook-card>\n</div>\n\n<app-info-snack [ngClass]=\"{'current-player': currentPlayerIndex === 0}\">\n    <table *ngIf=\"numberOfPlayers === 4\">\n        <tr>\n            <th>We</th>\n            <th>They</th>\n            <th>Bid</th>\n            <th>Er</th>\n            <th>trump</th>\n        </tr>\n\n        <tr *ngFor=\"let round of rounds\">\n            <td>{{round.points[this.index]}}</td>\n            <td>{{round.points[(this.index+1)%numberOfPlayers]}}</td>\n            <td>{{round.bid === 75 ? \"80\" : round.bid}}</td>\n            <td>{{round.bidWinner | bidDisplay : index : playerNames}}</td>\n            <td>\n                <div [ngStyle]=\"{'background-color': round.trump | tableColor}\" class=\"dot\"></div>\n\n            </td>\n        </tr>\n\n    </table>\n    <table *ngIf=\"numberOfPlayers !== 4\">\n        <thead>\n            <tr>\n                <th *ngFor=\"let name of playerNames\">{{name}}</th>\n                <th>Bid</th>\n                <th>Bidder</th>\n                <th>Trump</th>\n            </tr>\n        </thead>\n        <tr *ngFor=\"let round of rounds\">\n            <td *ngFor=\"let point of round.points; let i = index\">{{round.points[(this.index+i)%numberOfPlayers]}}</td>\n            <td>{{round.bid === 75 ? \"80\" : round.bid}}</td>\n            <td>{{round.bidWinner | bidDisplay : index : playerNames}}</td>\n            <td>\n                <div [ngStyle]=\"{'background-color': round.trump | tableColor}\" class=\"dot\"></div>\n\n            </td>\n        </tr>\n        <tfoot>\n            <tr>\n                <td *ngFor=\"let point of this.points\">{{point}}</td>\n                <td></td>\n                <td></td>\n                <td></td>\n            </tr>\n            <tfoot>\n\n\n\n    </table>\n</app-info-snack>\n<app-chat></app-chat>","import { Component, ElementRef, HostListener, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-info-snack',\n  templateUrl: './info-snack.component.html',\n  styleUrls: ['./info-snack.component.css']\n})\nexport class InfoSnackComponent implements OnInit {\n\n  @HostListener('document:click', ['$event'])\n  clickout(event) {\n    if(this.eRef.nativeElement.contains(event.target)) {\n\n    } else {\n      this.visible = false;\n    }\n  }\n\n\n  constructor(private eRef: ElementRef) { }\n\n  visible = false;\n\n  ngOnInit(): void {\n  }\n\n  openInfo(){\n    if(this.visible == false){\n      this.visible = true;\n    }else{\n      this.visible = false;\n    }\n  }\n\n}\n","<div class=\"circle-button\" (click)='openInfo()'>\n    <div class=\"circle-icon\">\n        <div class=\"info-box\" [ngClass]=\"{'hidden': !visible}\">\n            <ng-content></ng-content>\n        </div>\n    </div>\n</div>","import { Component, Input, OnChanges, OnInit } from '@angular/core';\nimport { Card } from 'src/app/services/models/card.model';\nimport { RoundState } from 'src/app/services/models/round-stage.model';\n\n@Component({\n  selector: 'app-player',\n  templateUrl: './player.component.html',\n  styleUrls: ['./player.component.css']\n})\nexport class PlayerComponent implements OnInit, OnChanges {\n  @Input() playerInfo: {};\n  @Input() playerIndex: number;\n  @Input() globalIndex: number\n  hands: Card[] = null;\n  playerNames: String[] = null;\n  playing: boolean = null;\n  playedCards: Card[] = null;\n  currentPlayer: number = null;\n  bidWinner: number = null;\n  bids: number = null\n  roundState = null\n  bid: number = 0\n  notYetBid: boolean = true\n  bidders: number[] = []\n  hasBid = false\n  description: string\n\n  \n  constructor() { }\n\n  ngOnInit(): void {\n    this.playing = this.playerInfo[\"playing\"]\n    this.hands = this.playerInfo[\"hands\"]\n    this.playerNames = this.playerInfo[\"playerNames\"]\n    this.playing = this.playerInfo[\"playing\"]\n    this.playedCards = this.playerInfo[\"playedCards\"]\n    this.currentPlayer = this.playerInfo[\"currentPlayer\"]\n    this.bidWinner = this.playerInfo[\"bidWinner\"]\n    this.bids = this.playerInfo[\"bids\"]\n    this.roundState = this.playerInfo['roundState'] === RoundState.BIDDING\n    this.bid = this.bids[this.globalIndex]\n    this.bidders = this.playerInfo['bidders']\n\n    if(this.bidders.includes(this.globalIndex) && this.bid < 80){\n      this.hasBid = false\n      this.description =  \"Not yet bid\"\n    }else if(this.bid < 80){\n      this.description = \"pass\"\n    }else{\n      this.description = this.bid + \"\"\n    }\n\n    console.log(this.description)\n  }\n  ngOnChanges(): void {\n    this.hands = this.playerInfo[\"hands\"]\n    this.playerNames = this.playerInfo[\"playerNames\"]\n    this.playing = this.playerInfo[\"playing\"]\n    this.playedCards = this.playerInfo[\"playedCards\"]\n    this.currentPlayer = this.playerInfo[\"currentPlayer\"]\n    this.bidWinner = this.playerInfo[\"bidWinner\"]\n    this.bids = this.playerInfo[\"bids\"]\n    this.roundState = this.playerInfo['roundState'] === RoundState.BIDDING\n    this.bid = this.bids[this.globalIndex]\n    this.bidders = this.playerInfo['bidders']\n    if(this.bidders.includes(this.globalIndex) && this.bid < 80){\n      this.hasBid = false\n      this.description =  \"Not yet bid\"\n    }else if(this.bid < 80){\n      this.description = \"pass\"\n    }else{\n      this.description = this.bid + \"\"\n    }\n  }\n\n}\n","<div class=\"player-container\">\n    <div class=\"name-bid\">\n        <div *ngIf=\"playerNames[playerIndex] !== null\" class=\"circle-name\" [ngClass]=\"{'current-player': currentPlayer === playerIndex}\"><span *ngIf=\"bidWinner === playerIndex\">⭐</span> {{playerNames[playerIndex]}}</div>\n        <div *ngIf=\"roundState\" class=\"bid\">{{this.description}}</div>\n    </div>\n    <div class=\"top-player player\">\n        <app-rook-card *ngFor=\"let card of hands[playerIndex]\" [card]=\"card\">\n        </app-rook-card>\n        <div *ngIf=\"playing && playedCards[playerIndex] !== null\" class=\"played-card\">\n            <app-rook-card [card]=\"playedCards[playerIndex]\">\n            </app-rook-card>\n        </div>\n    </div>\n</div>","export class RookAction {\n    constructor(public action: 'bid' | 'discard' | 'redeal' | 'choose_partner' |'round_info', public payload: any){}\n}\n","import { animate, state, style, transition, trigger } from '@angular/animations';\nimport { Component, OnChanges, Input, OnInit } from '@angular/core';\nimport { Card } from '../../services/models/card.model';\nimport {Color} from '../../services/models/color.model'\n\n@Component({\n  selector: 'app-rook-card',\n  templateUrl: './rook-card.component.html',\n  styleUrls: ['./rook-card.component.css'],\n  \n})\nexport class RookCardComponent implements OnInit {\n  @Input() card: Card;\n  color: string\n\n  constructor() { }\n\n\n  ngOnChanges(){\n\n    this.setColor()\n\n  }\n\n  ngOnInit(): void {\n\n    this.setColor()\n\n  }\n\n  setColor(){\n\n    switch(this.card.color){\n      case Color.BLACK:\n        this.color = 'black'\n        break\n      case Color.RED:\n        this.color = 'red'\n        break;\n      case Color.YELLOW:\n        this.color = 'blue'\n        break;\n      case Color.GREEN:\n        this.color = 'green'\n        break;\n    }\n\n  }\n\n  cardClicked() {\n    if (this.card.state === \"face\") {\n      this.card.state = \"flipped\";\n    } else {\n      this.card.state = \"face\";\n    }\n  }\n\n}\n","<img src=\"../../../assets/img/card.gif\" class=\"aspect-img\">\n<div class=\"card {{card.state}}\">\n    <div class=\"back faces\">\n        <div class=\"back-card\">\n            <div class=\"crow\"></div>\n        </div>\n\n    </div>\n    <div class=\"front faces\">\n        <div *ngIf=\"card.value == 0\" class=\"penguin-text\" [style.color]=\"color\">B i r d</div>\n        <div *ngIf=\"card.value == 0\" class=\"penguin-text penguin-text-bottom\" [style.color]=\"color\">B i r d</div>\n        <a href=\"#0\"></a>\n        <div class=\"top-left-content\" [ngClass]=\"{'left-20': card.value == 0}\">\n\n            <div [style.color]=\"color\" *ngIf=\"card.value != 0\" class=\"number_top_left\">{{card.value}}</div>\n            <div class=\"right-of-number\">\n                <div class=\"card_color\" [style.color]=\"color\">{{color}}</div>\n                <div *ngIf=\"card.points\" [style.backgroundColor]=\"color\" class=\"number_of_points\">{{card.points}}</div>\n            </div>\n        </div>\n        <div *ngIf=\"card.value != 0\" [style.color]=\"color\" class=\"number_bottom_right\">{{card.value}}</div>\n        <div class=\"flex-absolute-container\">\n            <div *ngIf=\"card.value == 0\" class=\"crow\"></div>\n            <div *ngIf=\"card.value != 0\" [style.color]=\"color\" class=\"number_middle\" [style.backgroundColor]=\"color\">{{card.value}}</div>\n        </div>\n\n    </div>\n\n</div>","import {Pipe, PipeTransform} from '@angular/core'\nimport {Color} from '../services/models/color.model'\n\n\n@Pipe({\n    name: 'tableColor'\n})\n\n\nexport class TableColorPipe implements PipeTransform{\n    \n\n    transform(value: any){\n        console.log(value)\n        switch(value){\n        case Color.BLACK:\n            return 'black'\n            break\n        case Color.RED:\n            return 'red'\n            break;\n        case Color.YELLOW:\n            return 'blue'\n            break;\n        case Color.GREEN:\n            return 'green'\n            break;\n        case Color.UNDETERMINED:\n            return 'transparent'\n            break;\n        }\n    }\n}\n","export class SnackData {\n    constructor(public message: string, public action: 'bid' | 'discard' | 'redeal' | 'choose_partner'| 'round_info', public payload: any){}\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Game } from 'src/app/models/game.model';\nimport { GamesService } from 'src/app/services/games.service';\nimport {MatDialogRef} from '@angular/material/dialog'\n\n@Component({\n  selector: 'app-create-game',\n  templateUrl: './create-game.component.html',\n  styleUrls: ['./create-game.component.css']\n})\nexport class CreateGameComponent implements OnInit {\n\n  numberOfPlayers: number = 4\n  createdGame = false\n  myForm: FormGroup\n  errorMessage: string\n\n\n  constructor(private gameService: GamesService, private fb: FormBuilder, private dialogRef: MatDialogRef<CreateGameComponent>) { }\n\n  ngOnInit(): void {\n\n    this.myForm = this.fb.group({\n      name: ['', Validators.required],\n      numberOfPlayers: ['', Validators.required],\n      throwOutPoints: [false],\n      mostCards: [false],\n      lastTrick: [false],\n    })\n  }\n\n  enterGame(){\n\n      console.log(this.myForm.value)\n\n\n    if(this.myForm.valid){\n\n      const formValue = this.myForm.value\n\n      if(formValue.numberOfPlayers >= 3 && formValue.numberOfPlayers <= 6){\n        this.gameService.addGame(formValue.numberOfPlayers, formValue.name, formValue.lastTrick, formValue.mostCards, formValue.throwOutPoints)\n        this.createdGame = true\n        this.dialogRef.close()\n      }else{\n        this.errorMessage = \"We only support four player games at the moment\"\n      }\n    }\n\n  }\n}\n","\n<form [formGroup]=\"myForm\" (ngSubmit)=\"enterGame()\" class=\"form-flex \">\n\n    <div *ngIf=\"errorMessage\" class=\"row\">\n        <div class=\"col-sm-6\">\n            <div class=\"alert alert-danger\">\n                {{errorMessage}}\n            </div>\n        </div>\n    </div>\n    <div class=\"row top\">\n        <div class=\"col-sm\">\n            <mat-form-field>\n                <input matInput placeholder=\"Game Name\" formControlName=\"name\">\n            </mat-form-field>\n        </div>\n    </div>\n    <div class=\"row flex-row\">\n        <div class=\"col-sm wrap\">\n            <mat-dialog-content>\n                <mat-form-field class='w-100' >\n                    <input type=\"number\" autocomplete=\"off\" placeholder=\"Number of Players\"  matInput formControlName=\"numberOfPlayers\">\n                </mat-form-field>\n            </mat-dialog-content>\n        </div>\n    </div>\n    <div>\n        <div class=\"row\">\n            <mat-checkbox class = \"tp-margin\" formControlName = \"lastTrick\">Last Trick 10 pts</mat-checkbox>\n        </div>\n\n        <div class=\"row\">\n            <mat-checkbox class = \"tp-margin\" formControlName = \"mostCards\">Most Cards 10 pts</mat-checkbox>\n        </div>\n        <div class=\"row\">\n            <mat-checkbox class = \"tp-margin\" formControlName = \"throwOutPoints\">Throw Out Points Allowed</mat-checkbox>\n        </div>\n\n    </div>\n\n    <div class=\"row flex-row\">\n        <div class=\"col-sm-2 wrap\">\n            <button mat-button class=\"btn btn-primary\" color=\"primary\" type=\"submit\" [disabled]=\"myForm.invalid\">Create Game</button>\n        </div>\n    </div>\n\n\n\n</form>\n\n","import {Pipe, PipeTransform} from '@angular/core'\n\n\n@Pipe({\n    name: 'display'\n})\n\n\nexport class DisplayPipe implements PipeTransform{\n    \n\n    transform(value: any){\n        if(value === 0){\n            return 'This room is full'\n        }else if(value === 1){\n            return `This room needs 1 player`\n        }else{\n            return `This room needs ${value} player`\n        }\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport {Game} from '../models/game.model'\nimport {GamesService} from '../services/games.service'\nimport {MatDialog} from '@angular/material/dialog'\nimport { CreateGameComponent } from './create-game/create-game.component';\n\n@Component({\n  selector: 'app-games',\n  templateUrl: './games.component.html',\n  styleUrls: ['./games.component.css']\n})\nexport class GamesComponent implements OnInit {\n\n  games: Game[]\n  selectedGame: Game\n  errorMessage: string = ''\n  dialogRef: any\n  constructor(private gameService: GamesService, public dialog: MatDialog) { }\n\n  ngOnInit(): void {\n    \n    this.games = this.gameService.games\n    this.sortGames()\n\n    this.gameService.gamesChanged.subscribe((games: Game[]) => {\n      this.games = games\n      this.sortGames()\n    })\n\n    this.gameService.errorMessage.subscribe((msg) => {\n      this.errorMessage = msg\n    })\n\n    this.gameService.fetchGames()\n  }\n\n\n  sortGames(){\n\n    this.games.sort((a,b) => {\n      if(a.finished && !b.finished){\n\n        return 1\n      }else if(!a.finished && b.finished){\n        return -1\n      }else{\n        return 0\n      }\n    })\n  }\n\n  openDialog(){\n    this.dialogRef = this.dialog.open(CreateGameComponent, {\n      width: '50%',\n      height: '50%'\n    })\n\n    this.dialogRef.afterClosed().subscribe(result => {\n      console.log(result)\n    })\n  }\n\n\n\n  joinGame(game){\n    if(!game.finished){\n      this.gameService.joinGame(game)\n    }\n  }\n}\n","\n<button class=\"btn btn-primary\" (click)=\"openDialog()\">Add Game</button>\n<div *ngIf=\"errorMessage\" class=\"row\">\n    <div class=\"col-sm-6\">\n        <div class=\"alert alert-danger\">\n            {{errorMessage}}\n        </div>\n    </div>\n</div>\n\n\n<router-outlet></router-outlet>\n<div *ngFor=\"let game of games\" class=\"list-group\">\n    <a style=\"cursor: pointer;\" class=\"list-group-item \">\n        <div class=\"row\">\n            <div class=\"col-sm-4\">\n                <div >Game: {{game.name}}</div>\n                <button class=\"btn btn-primary\" [class.disabled]=\"(slectedGame && game.id === selectedGame.id) || game.finished\" (click)=\"joinGame(game)\">Join</button>\n            </div>\n            <div class=\"col-sm-4\">\n                <div class=\"list-group\">\n                    <li class=\"list-group-item\" *ngFor=\"let player of game.playerNames\">{{player}}</li>\n                </div>\n            </div>\n            <div *ngIf=\"!game.finished\" class=\"col-sm-4\">\n                {{game.numberOfPlayers - game.playerNames.length | display}}\n            </div>\n            <div *ngIf=\"game.finished\" class=\"col-sm-4\">\n                This Game is no longer active\n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"col-sm-4\">\n                <div *ngIf=\"game.throwOutPoints\" class=\"row\">\n                You can throw out points and last trick will get them\n                </div>\n                <div *ngIf=\"!game.throwOutPoints\" class=\"row\">\n                    You cannot throw out points\n                </div>\n                <div *ngIf=\"game.lastTrick\" class=\"row\">\n                You get 10 points for last trick\n                </div>\n                <div *ngIf=\"game.mostCards\" class=\"row\">\n                    You get 10 points for most cards\n                </div>\n            </div>\n        </div>\n    </a>\n</div>","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { AuthService } from '../auth/auth.service';\nimport { GamesService } from '../services/games.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit, OnDestroy{\n\n  collapsed = true \n  loggedInSubscription: Subscription\n  authenticated: boolean = false\n  biddingBoxRequired = false\n  bid = null\n\n\n  constructor(private authService: AuthService) { }\n\n\n  ngOnInit(): void {\n\n\n    this.loggedInSubscription = this.authService.user.subscribe(user => {\n      if(user){\n        this.authenticated = true\n      }\n\n    })\n\n  }\n\n  ngOnDestroy(){\n    this.loggedInSubscription.unsubscribe()\n  }\n\n\n\n  logout(){\n    this.authService.logout()\n  }\n\n}\n","<nav class=\"navbar navbar-default\">\n    <div class=\"container-fluid\">\n        <div class=\"navbar-header\">\n            <button type=\"button\" class=\"navbar-toggle\" (click)=\"collapsed=!collapsed\">\n                <span class=\"icon-bar\"></span>\n                <span class=\"icon-bar\"></span>\n                <span class=\"icon-bar\"></span>\n            </button>\n            <a class=\"navbar-brand\">Rook</a>\n        </div>\n        <div class=\"navbar-collapse\" [class.collapse]=\"collapsed\" (window:resize)=\"collapsed=true\">\n            <ul class=\"nav navbar-nav\">\n                <li *ngIf=\"authenticated\" ><a style=\"cursor: pointer;\" routerLink=\"/games\">Games</a></li>\n                <li *ngIf=\"!authenticated\"><a style=\"cursor: pointer;\" routerLink=\"/register\">Register</a></li>\n                <li *ngIf=\"!authenticated\"><a style=\"cursor: pointer;\" routerLink=\"/login\">Login</a></li>\n            </ul>\n            <ul class=\"nav navbar-nav navbar-right\">\n                <li *ngIf=\"authenticated\" ><a style=\"cursor: pointer;\" *ngIf=\"authenticated\" (click)=\"logout()\">Logout</a></li>\n            </ul>\n        </div>\n    </div>\n</nav>\n","export class Player{\n\n    constructor(public player_id: string, public player_name: string){}\n}","import { ngModuleJitUrl } from '@angular/compiler'\nimport {Routes, RouterModule} from '@angular/router'\nimport {GamesComponent} from './games/games.component'\nimport {NgModule} from '@angular/core'\nimport {RegisterComponent} from './auth/register/register.component'\nimport { LoginComponent } from './auth/login/login.component'\nimport {AuthGuardService} from './auth/auth-guard.service'\nimport { CreateGameComponent } from './games/create-game/create-game.component'\nimport { GameroomComponent } from './gameroom/gameroom.component'\nimport {GameroomGaurdService} from './gameroom/gameroom-gaurd.service'\n\n\n\n\n\n\nconst appRoutes: Routes = [\n    {path: '', redirectTo: 'games', pathMatch: 'full'},\n    {path: 'games', component: GamesComponent, canActivate: [AuthGuardService], children: [\n        {path: 'create', component: CreateGameComponent},\n    ]},\n    {path: 'register', component: RegisterComponent},\n    {path: 'login', component: LoginComponent},\n    {path: 'gameroom/:id', component: GameroomComponent, canActivate: [AuthGuardService, GameroomGaurdService]}\n\n]\n\n@NgModule({\n    imports: [\n        RouterModule.forRoot(appRoutes)\n    ],\n    exports: [\n        RouterModule\n    ]\n})\n\n\n\nexport class RoutingModule{}\n","import { HttpHandler, HttpHeaders, HttpInterceptor, HttpRequest } from '@angular/common/http'\nimport {Injectable} from '@angular/core'\nimport {GamesService} from './games.service'\nimport {take, exhaustMap} from 'rxjs/operators'\n\n@Injectable()\n\nexport class GameInterceptor implements HttpInterceptor{\n\n    constructor(private gameService: GamesService){\n\n    }\n\n\n    intercept(req: HttpRequest<any>, next: HttpHandler){\n        return this.gameService.game.pipe(take(1), exhaustMap(game => {\n\n            if(!game){\n                console.log('game is not initalized')\n                return next.handle(req)\n            }else{\n\n                console.log('game is inatlized')\n                console.log(game)\n\n                console.log(req.headers.get('auth-token'))\n\n                const modifiedReq = req.clone({headers: new HttpHeaders({'auth-token': req.headers.get('auth-token'), 'game-token': game.id,})})\n                return next.handle(modifiedReq)\n            }\n\n        }))\n\n    }\n}","import { HttpClient, HttpClientModule, HttpErrorResponse, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Router, RouterModule } from '@angular/router';\nimport { BehaviorSubject, Subject, throwError } from 'rxjs';\nimport { catchError, tap} from 'rxjs/operators';\nimport { AuthService } from '../auth/auth.service';\nimport {Game} from '../models/game.model'\nimport {Play} from './models/play.model'\nimport{WebSocketService} from '../web-socket.service'\nimport {Card} from '../services/models/card.model'\nimport { MoveType } from './models/move-type.model';\nimport { Player } from '../models/player.model';\n\ninterface GameResponseData {\n  host: string;\n  numberOfPlayers: string,\n  id: string\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GamesService {\n\n  gamesChanged: Subject<Game[]> = new Subject<Game[]>()\n  games: Game[] = []\n  errorMessage: Subject<string> = new Subject<string>()\n  game: BehaviorSubject<Game> = new BehaviorSubject<Game>(null)\n  hand: Subject<Card[]> = new Subject<Card[]>()\n  bidRequest: Subject<any> = new Subject<any>()\n  bidDialogClosedStillBidding: Subject<any> = new Subject<any>()\n  bidding: boolean = false\n  kitty: Subject<any> = new Subject<any>()\n  yourIndex: BehaviorSubject<number> = new BehaviorSubject<number>(null) \n  gameState: BehaviorSubject<any> = new BehaviorSubject<any>(null)\n  \n\n\n  constructor(private http: HttpClient, private authService: AuthService, private socketService: WebSocketService, private router: Router) {\n\n\n    this.socketService.listen('game_state').subscribe(data => {\n\n      console.log(data)\n\n      this.gameState.next(data)\n    })\n\n     this.gameState.subscribe(data => {\n\n        if(data !== null){\n\n          this.yourIndex.subscribe(index => {\n            if(index === null){\n              console.log(data)\n              var players = data['players']\n              if(players){\n                  this.authService.user.subscribe(user => {\n                    if(user !== null){\n                      for(let i = 0 ; i < players.length; i++){\n                        if(players[i] !== null && players[i].player_id === user.id){\n                          this.yourIndex.next(i)\n                        }\n                      }\n                    }\n                })\n              }\n            }\n          })\n        }\n\n\n\n    })\n\n    this.authService.user.subscribe(user => {\n      if(user === null){\n        this.game.next(null)\n        this.gamesChanged.next(null)\n        this.yourIndex.next(null)\n      }\n    })\n\n\n    this.socketService.listen('game_state_changed').subscribe(data => {\n\n      if(data){\n      const finished = data['finished']\n      console.log('finished')\n      console.log(finished)\n\n      this.game.subscribe(game => {\n        this.authService.user.subscribe(user => {\n            this.socketService.emit('get_game_state', {game_id: game.id, player_id: user.id})\n\n            if(finished){\n              this.socketService.emit('game_done', {game_id: game.id, player_id: user.id})\n              this.game.next(null)\n              this.gameState.next(null)\n            }\n\n        })\n\n      })\n    }\n\n    })\n\n\n    this.game.subscribe(game => {\n      if(game !== null){\n\n        this.authService.user.subscribe(user => {\n\n          if(user !== null){\n            this.router.navigate(['/gameroom/', game.id])\n            this.socketService.emit('get_game_state', {game_id: game.id, player_id: user.id})\n          }\n\n        })\n\n      }\n    })\n\n    this.gamesChanged.subscribe(games => {\n      this.authService.user.subscribe(user => {\n\n        if(user !== null){\n\n          for(let game of games){\n\n            if(!game['finished']){\n\n              for(let id of game['playerIds']){\n\n                if( id === user.id){\n\n                  this.game.next(game)\n\n                  this.socketService.emit('get_game_state', {game_id: game.id})\n\n                }\n              }\n\n            }\n            \n\n          }\n\n\n        }\n      })\n\n    })\n\n   }\n\n\n  fetchGames(){\n\n    return this.http.get<Game[]>('api/games').pipe(catchError(this.handleErrors), tap(games => {\n      this.games = games\n    })).subscribe(resData => {\n      this.gamesChanged.next(this.games)\n    }, error => {\n      this.errorMessage.next(error)\n    })\n\n  }\n\n  addGame(numberOfPlayers: number, name: string, lastTrick: boolean, mostCards: boolean, throwOutPoints: boolean){\n    return this.http.post<Game>('api/games/game', {numberOfPlayers: numberOfPlayers, name: name, throwOutPoints: throwOutPoints, mostCards: mostCards, lastTrick: lastTrick}).pipe(catchError(this.handleErrors), tap(game => {\n      this.games.push(game)\n      this.game.next(game)\n\n      this.authService.user.subscribe((user) =>{\n        this.socketService.emit('play', {player_id: user.id, game_id : game.id, play: new Play(MoveType.INITALIZE_GAME , user.id, {player: new Player(user.id, user.name),lastTrick: lastTrick, mostCards: mostCards, throwOutPoints: throwOutPoints})})\n      })\n    })).subscribe(resData => {\n      this.gamesChanged.next(this.games)\n\n    }, error => {\n\n      this.errorMessage.next(error)\n    })\n\n\n\n\n  }\n\n  joinGame(game: Game){\n\n    this.game.next(game)\n\n    return this.http.put<Game>('api/games/game', {game_id: game.id}).pipe(catchError(this.handleErrors), tap(changedGame => {\n\n    for(var i = 0 ; i < this.games.length; i++){\n      if(this.games[i].id === changedGame.id){\n        this.games[i] = changedGame\n      }\n    }\n\n    this.gamesChanged.next(this.games)\n\n      this.authService.user.subscribe((user) =>{\n        console.log(user)\n        this.socketService.emit('play', {player_id: user.id, game_id : changedGame.id, play: new Play(MoveType.ADD_PLAYER, user.id, new Player(user.id, user.name))})\n      })\n\n    })).subscribe( changedGame => {\n\n      console.log(changedGame)\n\n    }, error => {\n\n      this.errorMessage.next(error)\n    })\n  }\n\n\n\n  handleErrors(errorRes: HttpErrorResponse){\n    let errorMessage = errorRes.error\n\n    let message = 'an unkown error has occured'\n\n    console.log(errorRes)\n\n    switch(errorMessage){\n      case 'ALREADY_IN_GAME':\n        message =\"You are already in this game\"\n        break\n      case 'HOSTING_ALREADY':\n        message = 'You are already hosting a game'\n        break;\n      case 'INVALID_TOKEN':\n        message = 'your token is invalid'\n        break\n      case 'NO_TOKEN':\n        message = 'you have no token'\n        break\n\n    }\n    return throwError(message)\n\n  }\n\n}\n","export enum Color {RED, BLACK, YELLOW, GREEN, UNDETERMINED}","export enum MoveType {ADD_PLAYER ,BID, DISCARD ,PLAY, SET_TRUMP, INITALIZE_GAME, CHOOSE_PARTNER, CORRECTING_MISDEAL}","import {MoveType} from './move-type.model'\n\nexport class Play {\n    constructor(public moveType: MoveType, public player_id: string ,public payload: any){}\n}","export enum RoundState {WAITING_ON_PLAYERS, DISCARDING, CHOOSING_TRUMP ,BIDDING, LEADING, PLAYING, CHOOSING_PARTNER, DONE}\n","import { Injectable } from '@angular/core';\n\nimport { Observable } from 'rxjs';\nimport * as io from 'socket.io-client/dist/socket.io'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WebSocketService {\n\n  socket: any \n  readonly uri = 'ws://ec2-52-24-67-171.us-west-2.compute.amazonaws.com:3000/games/socket'\n\n  constructor() { \n    console.log(this.uri)\n    this.socket = io(this.uri)\n  }\n\n  listen(eventName: string){\n    return new Observable((subscriber) => {\n      this.socket.on(eventName, data => {\n        subscriber.next(data)\n      }\n\n        )\n    })\n  }\n\n\n  emit(eventName: string, data:any){\n    this.socket.emit(eventName, data)\n  }\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}